/**
 * AutomartLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of PostAdRequest
 */
class PostAdRequest extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.owner = this.constructor.getValue(obj.owner);
        this.state = this.constructor.getValue(obj.state);
        this.status = this.constructor.getValue(obj.status);
        this.price = this.constructor.getValue(obj.price);
        this.manufacturer = this.constructor.getValue(obj.manufacturer);
        this.model = this.constructor.getValue(obj.model);
        this.bodyType = this.constructor.getValue(obj.bodyType);
        this.description = this.constructor.getValue(obj.description);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'owner', realName: 'owner' },
            { name: 'state', realName: 'state' },
            { name: 'status', realName: 'status' },
            { name: 'price', realName: 'price' },
            { name: 'manufacturer', realName: 'manufacturer' },
            { name: 'model', realName: 'model' },
            { name: 'bodyType', realName: 'bodyType' },
            { name: 'description', realName: 'description' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = PostAdRequest;
