/**
 * AutomartLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");
const baseController = require("../../lib/Controllers/BaseController");

const controller = testerlib.MiscController;
const FlagAPostedCarAdRequest = testerlib.FlagAPostedCarAdRequest;
const SignupRequest = testerlib.SignupRequest;
const PostAdRequest = testerlib.PostAdRequest;
const UpdateThePriceOfACarAdRequest = testerlib.UpdateThePriceOfACarAdRequest;
const UpdatePriceOfAPurchaseOrderRequest = testerlib.UpdatePriceOfAPurchaseOrderRequest;
const MarkPostedAdAsSoldRequest = testerlib.MarkPostedAdAsSoldRequest;
const LoginRequest = testerlib.LoginRequest;
const CreatePurchaseOrderRequest = testerlib.CreatePurchaseOrderRequest;

describe("MiscController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * Endpoint to delete a specific car ad
     */
    it("should testDeleteSpecificAd response", function testDeleteSpecificAdTest(done) {
        controller.deleteSpecificAd(function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });

    /**
     * Api endpoint to get a specific car advert
     */
    it("should testViewAllPostedAds response", function testViewAllPostedAdsTest(done) {
        controller.getViewAllPostedAds(function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });

    /**
     * An endpoint to get all posted ads
     */
    it("should testGetSpecificAdFromDatabase response", function testGetSpecificAdFromDatabaseTest(done) {
        controller.getSpecificAdFromDatabase(function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });

    /**
     * An endpoint to flag a posted car advert
     */
    it("should testFlagAPostedCarAd response", function testFlagAPostedCarAdTest(done) {
        // parameters for the API call
        let xAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlhdCI6MTU2MTYxNzE2MSwiZXhwIjoxNTYxNzAzNTYxfQ.4USS0nr5mcft7nkpyBDL_Y-qAZ_1AAPB171DPZc4Wow';
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({
  "carId": 1,
  "reason": "Pricing",
  "description": "the pricing is too high"
}, 'FlagAPostedCarAdRequest');

        controller.createFlagAPostedCarAd(xAccessToken, contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });

    /**
     * An endpoint for user registration/signup
     */
    it("should testSignup response", function testSignupTest(done) {
        // parameters for the API call
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({
  "firstName": "Pe",
  "lastName": "Kamau",
  "email": "peterkamau@gmail.com",
  "password": "1234566",
  "address": "Nairobi",
  "isAdmin": false
}, 'SignupRequest');

        controller.createSignup(contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });

    /**
     * An endpoint to create a car sale ad
     */
    it("should testPostAd response", function testPostAdTest(done) {
        // parameters for the API call
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({
  "owner": 1,
  "state": "new",
  "status": "available",
  "price": 54,
  "manufacturer": "Toyota",
  "model": "Prado",
  "bodyType": "suv",
  "description": "a nice suv vehicle"
}, 'PostAdRequest');

        controller.postAd(contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });

    /**
     * Endpoint to update the price of a posted car ad
     */
    it("should testUpdateThePriceOfACarAd response", function testUpdateThePriceOfACarAdTest(done) {
        // parameters for the API call
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({"price": 80}, 'UpdateThePriceOfACarAdRequest');

        controller.updateThePriceOfACarAd(contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });

    /**
     * AN Endpoint whereby a user can update the price of their purchase order
     */
    it("should testUpdatePriceOfAPurchaseOrder response", function testUpdatePriceOfAPurchaseOrderTest(done) {
        // parameters for the API call
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({"price": 37}, 'UpdatePriceOfAPurchaseOrderRequest');

        controller.updatePriceOfAPurchaseOrder(contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });

    /**
     * Endpoint to view all unsold cars within a specific price range
     */
    it("should testViewUnsoldPriceRange response", function testViewUnsoldPriceRangeTest(done) {
        // parameters for the API call
        let status = 'available';
        let minPrice = 0;

        controller.getViewUnsoldPriceRange(status, minPrice, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });

    /**
     * Endpoint to mark a posted car ad as sold
     */
    it("should testMarkPostedAdAsSold response", function testMarkPostedAdAsSoldTest(done) {
        // parameters for the API call
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({
  "status": "available"
}, 'MarkPostedAdAsSoldRequest');

        controller.updateMarkPostedAdAsSold(contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });

    /**
     * An endpoint where a user can view all unsold cars
     */
    it("should testViewAllUnsoldCars response", function testViewAllUnsoldCarsTest(done) {
        // parameters for the API call
        let status = 'available';

        controller.getViewAllUnsoldCars(status, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });

    /**
     * A user is able to login to automart
     */
    it("should testLogin response", function testLoginTest(done) {
        // parameters for the API call
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({
  "email": "peterkamau@gmail.com",
  "password": "1234566"
}, 'LoginRequest');

        controller.createLogin(contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });

    /**
     * An API endpoint to create a purchase order
     */
    it("should testCreatePurchaseOrder response", function testCreatePurchaseOrderTest(done) {
        // parameters for the API call
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({
  "buyerId": 1,
  "carId": 1,
  "amount": 23,
  "status": "pending"
}, 'CreatePurchaseOrderRequest');

        controller.createPurchaseOrder(contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });
});
